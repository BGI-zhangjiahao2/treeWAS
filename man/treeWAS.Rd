% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/treeWAS.R
\name{treeWAS}
\alias{treeWAS}
\title{treeWAS
: tree-based GWAS.}
\usage{
treeWAS(x, y, snps.gen = NULL, tree = NULL, mt.rate = NULL,
  p.value = 0.001, plot.null.dist = TRUE, plot.dist = FALSE,
  plot.Fitch = TRUE, plot.tree = FALSE, tree.method = "ml", n.reps = 1,
  sim.gen.size = 10000, sim.by = "locus", method = "Didelot",
  test = "score")
}
\arguments{
\item{x}{A list, matrix, DNAbin, or genind object containing whole-genome or SNP datasets with individuals in rows and genetic variables in columns.}

\item{y}{A vector or factor containing the phenotype or trait status of all individuals in the dataset \code{x}.}

\item{snps.gen}{An optional genind object containing SNPs (to save time required for conversion).}

\item{tree}{An optional phylo or hclust object containing a phylogenetic tree to be used to
represent the real data and as a basis for simulating the comparator datasets.}

\item{mt.rate}{An optional integer specifying the mutation rate to be used when simulating comparator datasets.
If \code{mt.rate = NULL}, when \code{sim.by = "locus"}, \code{mt.rate} will be set to 1*2;
and when \code{sim.by = "branch"}, \code{mt.rate} will be estimated based on the data using the function parsimony from package phangorn.}

\item{p.value}{A number specifying the p-value to be used when setting the threshold for determining which SNP-trait correlations
are deemed to be statistically significant.}

\item{plot.null.dist}{A logical indicating whether to plot the significant SNPs identified (if any) on top of the null distribution
of correlations between the simulated SNPs and the phenotype, \code{y}. (TRUE by default.)}

\item{plot.dist}{A logical indicating whether to plot the significant SNPs identified (if any) on top of the distribution of correlations
between the SNPs provided in \code{x} and the phenotype, \code{y}. (FALSE by default.)}

\item{plot.Fitch}{A logical indicating whether to produce a plot, if \code{method = "Fitch"}. (TRUE by default.)}

\item{plot.tree}{A logical indicating whether to produce a plot of the phylogenetic tree. (FALSE by default.)}

\item{tree.method}{The (optional) method used to reconstruct a phylogenetic tree if \code{tree = NULL}.
Must be one of c("ml", "nj", "UPGMA"), specifying maximum-likelihood, neighbour-joining, and UPGMA (hclust, method = "average"), respectively.}

\item{n.reps}{An integer specifying the number of repititions desired when generating the comparator simulated datasets (ie. the number
of simulated datasets desired). (\code{n.reps = 1} by default.)}

\item{sim.gen.size}{An optional integer specifying the desired genome size for the simulated SNP datasets, if different from the number of
SNPs in the real data provided in \code{x}.(\code{sim.gen.size = 10,000} by default.)}

\item{sim.by}{The method by which the simulated data is generated (when \code{method = "Didelot"}).
\itemize{
 \item If \code{sim.by = "locus"}, then \code{mt.rate} denotes the expected number of mutations to occur at each locus.
 \item If \code{sim.by = "branch"}, then \code{mt.rate} denotes the expected number of mutations to occur in the whole genome.
 }}

\item{method}{The method by which SNP simulation and association testing proceeds.
\itemize{
 \item If \code{method = "Didelot"}, SNPs are simulated either by locus or by branch (see parameter \code{sim.by}), and association testing
 occurs by comparing the distribution of correlations between real SNPs, \code{x}, and the phenotype, \code{y}, across all loci.
 \item If \code{method = "Fitch"}, SNPs are simulated according to a site-specific mutation rate, determined by Fitch's parsimony,
 and association testing occurs site-by-site, comparing, at each locus, the correlation between the real SNP and the phenotype and the
 correlation between the simulated SNP and the phenotype.
 }}

\item{test}{The association test statistic to be used.
\itemize{
 \item If \code{test = "cor"}, the standard correlation between SNP and phenotype will be used. ("cor" is not recommended, as it is intended
 for use with continuous variables.)
 \item If \code{test = "score"}, a correlation score (currently for binary SNPs with binary phenotypes only)
 is calculated based on the SNP-phenotype contingency table at each locus, using the folowing
 formula to calculate the score for SNPi: \cr
 Scorei = ((S1P1 + S0P0) - (S1P0 + S0P1)) / N , \cr
 where S1 denotes SNPi=1, S0 denotes SNPi=0, P1 denotes Phenotype=1, P0 denotes Phenotype=0, and N denotes the number of individuals
 (ie. the total number of rows in the dataset \code{x}).
 \item If \code{test = "fisher"}, the p-values returned by a Fisher's exact test between each SNP and the phenotype are used.
 }}
}
\description{
This function runs genome-wide association studies (GWAS) for bacteria by comparing SNP-trait correlations in the data
with those derived from simulated genomic datasets based on phylogenetic trees taken from the data.
}
\examples{
\dontrun{
#############
## EXAMPLE ##
#############

## 1) Simulate data with your coalescent fn (see coalescent.R for commented fn BUT load coalescent.sim.R for actual fn)
## 2) Identify SNPs* to test--no sense in testing each site in the genome if only some vary enough...
#### *determine threshold to define a "SNP"... (eg. >= 1\% of sites have alternate nt)

# simulate data
out <- coalescent.sim(n.ind=10, gen.size=10000, theta=100*2, biallelic=TRUE, seed=2, plot=TRUE, heatmap=FALSE, plot2="ml")
## isolate elements of out-->
## get list of genomes
x <- snps <- out[[1]]
## get tree
tree <- out[[2]]
## take a look at the phylogeny:
plot(tree)

## Map phenotype perfectly to SNP 1
## convert genomes to get SNPs as: (1) data.frame, (2) genind object, (3) SNPs matrix:
if(is.null(names(x))) names(x) <- paste("ind", c(1:length(x)), sep=".")
gen.size <- length(x[[1]])
## working with snps in matrix form
snps <- do.call("rbind", x)
## get snps as DNAbin
snps.bin <- as.DNAbin(snps)
snps.gen <- DNAbin2genind(snps.bin, polyThres=0.01)
snps <- snps.gen@tab

R <- which(snps[,1]==1)
y <- c(rep("S", nrow(snps)))
y <- as.factor(replace(y, R, "R"))
## snps (list)
x <- snps <- out[[1]]

result <- treeWAS(x, y, snps.gen=snps.gen, tree=tree, mt.rate=NULL, p.value=0.001,
                  plot.null.dist=TRUE, plot.dist=FALSE, plot.Fitch=TRUE, plot.tree=FALSE, tree.method=NULL,
                  n.reps=1, sim.gen.size=1000,
                  sim.by="locus", method="Didelot", test="score")

## inspect results
str(result)

## inspect the data.frame containing information about the SNPs identified as "significant"
result[[5]]

## NOTE: the name of SNP i is not L.i, so this is the best way to use the index of a SNP
## to test whether that SNP has been identified as significant in your results
dimnames(x)[[2]][1] \%in\% result[[5]]$SNP.locus
}
}
\author{
Caitlin Collins \email{caitlin.collins12@imperial.ac.uk}
}

