{
    "contents" : "\n\n\n##################################################################################################################\n\n\n##################################\n## TRoUBLESHOOTING rtree ISSUES ##\n##################################\n\n## Run simTest up to treeWAS output:\n## Running set 1 (seed 41) w assoc.prrob = 100, n.snps=1000, n.snps.assoc=10000...\n\n\n\n## check terminal results:\nnrow(res$terminal$pval.0.01.bonf.count.10.x.n.snps$sig.snps)\n\n\ncorr.sim <- out$vals$terminal$corr.sim\ncorr.dat <- out$vals$terminal$corr.dat\n\nthresh <- res$terminal$pval.0.01.bonf.count.10.x.n.snps$sig.thresh\n\nlength(which(corr.dat > thresh))\n\n## check all treeWAS scores:\n\nhist(out$vals$terminal$corr.sim, breaks=10, xlim=c(0,1), col=transp(\"red\", 0.5),  freq=T, add=T)\nhist(out$vals$terminal$corr.dat, breaks=40, xlim=c(0,1), col=transp(\"blue\", 0.5), freq=T) #  add=T\n\n\nhist(out$vals$simultaneous$corr.sim[1:1000], breaks=40,\n     xlim=c(0, max(max(out$vals$simultaneous$corr.sim), max(out$vals$simultaneous$corr.dat))),\n     col=transp(\"red\", 0.5),  freq=T)\nhist(out$vals$simultaneous$corr.dat, breaks=40,\n     xlim=c(0, max(max(out$vals$simultaneous$corr.sim), max(out$vals$simultaneous$corr.dat))),\n     col=transp(\"blue\", 0.5), add=T, freq=T)\n\nhist(out$vals$subsequent$corr.sim[1:1000], breaks=40,\n     xlim=c(0, max(max(out$vals$subsequent$corr.sim), max(out$vals$subsequent$corr.dat))),\n     col=transp(\"red\", 0.5),  freq=T)\nhist(out$vals$subsequent$corr.dat, breaks=40,\n     xlim=c(0, max(max(out$vals$subsequent$corr.sim), max(out$vals$subsequent$corr.dat))),\n     col=transp(\"blue\", 0.5), add=T, freq=T)\n\n\n## Compare input n.subs (= dist_0) to output fitch n.subs: ##\n\n## input n.subs dist:\nbarplot(dist_0, names.arg=c(1:length(dist_0)), col=transp(\"royalblue\", 0.5))\n\n## output n.subs dist:\nfitch.complete <- get.fitch.n.mts(snps, tree)\nhist(fitch.complete, col=transp(\"red\", 0.5))\n\n## Uhoh...\n\n\n## Check fitch score for snps.assoc vs n.phen.subs:\nfitch.complete[snps.assoc] # all = 23\n\nn.phen.subs <- length(which(phen.plot.col$edges == \"grey\"))\nn.phen.subs # = 11...\n\n## Shit, if anything fitch should UNDER-estimate n.phen.subs!\n\nfitch.complete.41 <- fitch.complete\n\n###########\n## Double check that fitch is working for coalescent tree first...\n\ntree.ori <- tree\n\nc.sim <- coalescent.sim(n.ind=100,\n                        n.snps=10000,\n                        n.subs=dist_0,\n                        n.snps.assoc=10,\n                        assoc.prob=100,\n                        n.phen.subs=15,\n                        phen=NULL,\n                        plot=TRUE,\n                        heatmap=FALSE,\n                        reconstruct=FALSE,\n                        dist.dna.model=\"JC69\",\n                        grp.min = 0.25,\n                        row.names=NULL,\n                        set=1,\n                        coaltree = TRUE,\n                        s = 1,\n                        af = 2,\n                        filename = NULL,\n                        seed=41)\n\ntree.c <- tree <- c.sim$tree\nsnps.c <- snps <- c.sim$snps\nphen.c <- phen <- c.sim$phen\nlength(which(c.sim$phen.plot.col$edges == \"grey\")) # 11\nsnps.assoc.c <- snps.assoc <- c.sim$snps.assoc\n\n\n## Compare input n.subs (= dist_0) to output fitch n.subs: ##\n\n## input n.subs dist:\nbarplot(dist_0, names.arg=c(1:length(dist_0)), col=transp(\"royalblue\", 0.5))\n\n## output n.subs dist:\nfitch.complete <- get.fitch.n.mts(snps, tree)\nhist(fitch.complete, col=transp(\"red\", 0.5)) ## Good! Approx same shape as input dist!\n\nfitch.complete[snps.assoc] # 9\n## Also good! Just under-estimates the real number (11)...\n\n## QED something is definitely wrong w rtree that is fine for coaltree...\n\ntree$tip.label\nplot(tree, cex=0.5)\n\nget.tip.order(tree)\n\ntree.r <- tree.41\n# tree <- tree.c\n# tree.ord <- reorder.phylo(tree, order=\"postorder\")\n# str(tree.ord)\n## None of the reorder order options --> tree$tip.label being in order presented!\n\nstr(tree.r)\ntree.r2 <- reorder.phylo(tree.r, order=\"cladewise\")\nstr(tree.r2)\n\ntree.r.ori <- tree.r\nstr(snps.41)\ntree <- tree.r\ntree$tip.label <- c(1:100) ## REPLACE tree$tip.lab w simple c(1:100) before running fitch!\n\n## try fitch again:\nfitch.complete <- get.fitch.n.mts(snps.41, tree)\nhist(fitch.complete) ## SOLVED! -- looks like the hist for the coalescent tree ( and thus ~ like the input n.subs dist_0)\n\n\n############################### ############################################################################################\n## BUT -- PROBLEM REMAINS !! ##\n###############################\n## WHAT IF USER'S REAL DATA CONTAINS rownames(snps) as a set of character labels in a given order\n## and tree$tip.label cotains the same set of character labels in a DIFFerent order!\n\n## You will NOT be able to solve their problem simply by replacing tree$tip.label w c(1:N)\n## and WORSE, you WILL HAVE NO IDEA THERE IS A PROBLEM!\n\n############################################################################################################################\n\n\n# ## try fitch again w modified snps rownames?\n# rownames(snps) <- rev(c(1:100))\n# fitch.complete <- get.fitch.n.mts(snps, tree)\n# hist(fitch.complete) ## still works fine :(\n\n# ## try making tree tip.labs numeric?\n# # tree.r.new <- tree\n# tree <- tree.r\n# ## if we can remove \"t\" to get numeric, do so:\n# prefix <- keepFirstN(tree$tip.label, 1)\n# if(all(tolower(prefix) == \"t\")){\n#   temp <- removeFirstN(tree$tip.label, 1)\n#   if(all.is.numeric(temp))  tree$tip.label <- as.numeric(temp)\n# }\n#\n# snps <- snps.41\n#\n# ## try fitch again w numeric original tree$tip.labs?\n# fitch.complete <- get.fitch.n.mts(snps, tree)\n# hist(fitch.complete)\n# ## NOPE--fails again!\n#\n# ## Hyp-- fitch interprets the indices in tree$edge as the rownames(snps) to map to.\n# ## Changing the cells of tree$edge to be the numeric tree$tip.label they map to would probably work? ## NO THIS FAILS TOO!\n# ## Or possibly changing the rownames(snsp) to match the numeric tree$tip.labs? (NO, fails)\n# ## And doing BOTH of the above together ALSO FAILS!\n#\n# # rownames(snps) <- tree$tip.label\n#\n# tree$edge <- replace(tree$edge, which(tree$edge %in% c(1:length(tree$tip.label))), tree$tip.label)\n# snps <- snps.41\n# rownames(snps) <- tree$tip.label\n#\n\n\n#\n\n\n\n\n#\n\n\n##\n##################################################################################################################\n\n## Compare snps & snps.sim:\ntree$tip.label <- c(1:100)\nfitch.complete <- get.fitch.n.mts(snps, tree)\nhist(fitch.complete)\n\nsnps.sim <- out$dat$snps.sim\nfitch.complete <- get.fitch.n.mts(snps.sim, tree)\nhist(fitch.complete)\n\nnames(out$dat)\n\n#\n\n\n#\n\n\n\n\n#\n\n\n\n#\n",
    "created" : 1478011108229.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1719264624",
    "id" : "19480313",
    "lastKnownWriteTime" : 1478037213,
    "path" : "C:/Users/Caitlin/treeWAS/misc/rtree.troubleshooting.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}