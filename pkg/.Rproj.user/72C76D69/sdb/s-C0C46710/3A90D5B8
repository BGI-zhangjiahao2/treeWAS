{
    "collab_server" : "",
    "contents" : "\n\n## see \"testing_treeWAS.Rnw\" for original boxplots, ggplot2 etc. code...\n\n#########################################\n## fn getting order of tips as plotted ##\n#########################################\nget.tip.order <- function(tree){\n  tree2 <- read.tree(text=write.tree(tree))\n  out <- as.numeric(tree2$tip.label)\n  out <- rev(out)\n  return(out)\n} # end get.tip.order\n\n##################\n## tree (set 1) ##\n##################\n\ntree <- get(load(\"./set1_12_tree.Rdata\"))\nplot(tree)\n\nphen <- get(load(\"./set1_12_phen.Rdata\"))\n\nord <- get.tip.order(tree)\n#phen.ori <- phen\nphen <- phen[ord]\nmyCol <- as.character(phen)\nmyCol <- replace(myCol, which(myCol == \"B\"), \"blue\")\nmyCol <- replace(myCol, which(myCol == \"A\"), \"red\")\nleafCol <- myCol\nmyCol\nedgeCol <- \"black\"\n\nplot(tree, show.tip=FALSE, edge.width=2, edge.color=edgeCol) # edgeCol\naxisPhylo()\ntiplabels(text=tree$tip.label, cex=0.6, adj=c(-0.5, 0), col=leafCol, frame=\"none\", font=1)\n#\n\n#######################################################################################################################\n\n## Replace boxpots with:\n## box < violin < bean plot < beeswarm plot...\n\n####################\n## BEESWARM PLOTS ##\n####################\n\ninstall.packages(\"beeswarm\", dep=TRUE)\nlibrary(beeswarm)\n\n?beeswarm\n\n\n###################\n## BEESWARM PLOT ##   #########################   #########################   #########################\n###################\n#\n# #################################\n# ## EG from beeswarm package... ##\n# #################################\n# data(breast)\n#\n# #########################\n# ## reg. beeswarm plot: ##\n# #########################\n# breast2 <- breast[order(breast$event_survival, breast$ER),]\n#\n# beeswarm(time_survival ~ event_survival, data = breast2, pch = 16,\n#          pwcol = as.numeric(ER), xlab = '',\n#          ylab = 'Follow-up time (months)',\n#          labels = c('Censored', 'Metastasis'))\n# legend('topright', legend = levels(breast$ER), title = 'ER',\n#        pch = 16, col = 1:2)\n#\n# ##########################################\n# ## Reg. beeswarm PLUS boxplot overlaid: ##\n# ##########################################\n# beeswarm(time_survival ~ event_survival, data = breast2, pch = 16,\n#          pwcol = as.numeric(ER), xlab = '',\n#          ylab = 'Follow-up time (months)',\n#          labels = c('Censored', 'Metastasis'))\n# boxplot(time_survival ~ event_survival, data = breast2, add = T,\n#         names = c(\"\",\"\"), col=\"#0000ff22\")\n# legend('topright', legend = levels(breast$ER), title = 'ER',\n#        pch = 16, col = 1:2)\n#\n# #################################################\n# ## GGPLOT2 beeswarm plot PLUS boxplot overlaid ##\n# #################################################\n#\n# ## The trick is to use the beeswarm call\n# ## to get the x and y position.\n# ## Beeswarm creates a dataframe\n# ## from which we can get the necessary positionings...\n#\n# beeswarm <- beeswarm(time_survival ~ event_survival,\n#                      data = breast, method = 'swarm',\n#                      pwcol = ER)[, c(1, 2, 4, 6)]\n# colnames(beeswarm) <- c(\"x\", \"y\", \"ER\", \"event_survival\")\n#\n# library(ggplot2)\n# library(plyr)\n#\n# ## Do not forget to REMOVE the OUTLIERS\n# ## from your boxplot or they will superimpose\n# ## with the points created by geom_point.\n#\n# beeswarm.plot <- ggplot(beeswarm, aes(x, y)) +\n#   xlab(\"\") +\n#   scale_y_continuous(expression(\"Follow-up time (months)\"))\n#\n# beeswarm.plot2 <- beeswarm.plot +\n#   geom_boxplot(aes(x, y, group = round_any(x, 1, round)), outlier.shape = NA)\n#\n# beeswarm.plot3 <- beeswarm.plot2 + geom_point(aes(colour = ER)) +\n#   scale_colour_manual(values = c(\"black\", \"red\")) +\n#   scale_x_continuous(breaks = c(1:2),\n#                      labels = c(\"Censored\", \"Metastasis\"), expand = c(0, 0.5))\n#\n# plot(beeswarm.plot3)\n\n\n\n#\n\n\n#######################################################################################################################\n\n\n###############\n#### SET X ####\n###############\n\n#######################################################################################################################\n\n\nset.n <- \"set3\"\n\n# dirname <- paste(\"C:/Cait 2016/Work/Xavier/Sims/\", set.n, sep=\"\")\ndirname <- paste(\"/media/caitiecollins/88CC9BCECC9BB4C2/Cait 2016/Work/Xavier/Sims/\", set.n, sep=\"\")\n\nfoo <- dir(dirname)\nfoo\n## get all performance Rdata names\ntoKeep <- grep(\"performance\", foo) ##??\nfoo <- foo[toKeep]\nfoo\n\n## keep only subset w same args:\ntoFind <- paste(set.n, \"_\", c(51:81), sep=\"\")\ntoKeep <- sapply(c(1:length(toFind)), function(e) grep(toFind[e], foo)) ##??\nfoo <- foo[toKeep]\nfoo\n\n# ####################################\n# ## (for set2, varying theta_p...) ##\n# ####################################\n# foo <- foo.ori\n# foo.ori <- foo\n#\n# ## get true NUMERIC order of files:\n# NUMS <- list()\n# for(i in 1:length(foo)){\n# nums <- .substrLeft(foo[i], (nchar(foo[i]) - nchar(\"_performance.Rdata\")))\n# NUMS[[i]] <- as.numeric(.substrRight(nums, nchar(nums) -5))\n# }\n#\n# NUMS <- as.vector(unlist(NUMS))\n# length(NUMS)\n#\n# ## extract from NUMS the indices of the files\n# ## associated with each of the three values of theta_p:\n# tp5 <- which(NUMS %in% c(1:20, 61:90, 151, 202:226, 277:300))\n# tp25 <- which(NUMS %in% c(21:40, 91:120, 152:176, 227:251))\n# tp50 <- which(NUMS %in% c(41:60, 121:150, 177:201, 252:276))\n# length(tp5) # 100\n# length(tp25) # 100\n# length(tp50) # 100\n#\n# # foo <- foo.ori\n# foo <- foo.ori[tp50]\n# ###############################\n\n\n\n# ## p.value ##\n# if(i %in% 1:8) p.value <- 0.05\n# if(i %in% 9:16) p.value <- 0.01\n# if(i %in% 17:24) p.value <- 0.001\n# if(i %in% 25:32) p.value <- 0.0001\n#\n# ## p.value.correct ##\n# if(i %in% c(1:4, 9:12, 17:20, 25:28)){\n#   p.value.correct <- \"bonf\"\n# }else{\n#   p.value.correct <- \"fdr\"\n# }\n#\n# ## p.value.by ##\n# if(i %in% c(1,2,9,10,17,18,25,26, ## bonf\n#             5,6,13,14,21,22,29,30)){ ## fdr\n#   p.value.by <- \"count\"\n# }else{\n#   p.value.by <- \"density\"\n# }\n#\n# ## n.snps.sim ##\n# if(i %in% seq(1, 32, 2)){\n#   corr.sim <- corr.sim.ori\n# }else{\n#   corr.sim <- corr.sim.ori[1:length(corr.dat)]\n# }\n\n## load performance data\ndat <- list()\nsetwd(dirname)\nfor(i in 1:length(foo)){\n  dat[[i]] <- get(load(paste(\"./\", foo[i], sep=\"\")))\n}\n\n## CAREFUL-- accuracy may need to be multiplied by 2 (if ncol(snps) was doubled for PLINK!)\n\nnames(dat[[1]])\n\n\n\n\ntreeWAS <- list()\nfor(i in 1:length(dat)){\n  treeWAS[[i]] <- dat[[i]][[2]]\n}\n\nfisher.bonf <- list()\nfor(i in 1:length(dat)){\n  fisher.bonf[[i]] <- dat[[i]][[3]]\n}\n\nfisher.fdr <- list()\nfor(i in 1:length(dat)){\n  fisher.fdr[[i]] <- dat[[i]][[4]]\n}\n\n\nplink.bonf <- list()\nfor(i in 1:length(dat)){\n  plink.bonf[[i]] <- dat[[i]][[5]]\n}\n\nplink.fdr <- list()\nfor(i in 1:length(dat)){\n  plink.fdr[[i]] <- dat[[i]][[6]]\n}\n\nplink.gc.bonf <- list()\nfor(i in 1:length(dat)){\n  plink.gc.bonf[[i]] <- dat[[i]][[7]]\n}\n\nplink.gc.fdr <- list()\nfor(i in 1:length(dat)){\n  plink.gc.fdr[[i]] <- dat[[i]][[8]]\n}\n\n\n\n## combine\ntreeWAS <- do.call(\"rbind\", treeWAS)\nfisher.bonf <- do.call(\"rbind\", fisher.bonf)\nfisher.fdr <- do.call(\"rbind\", fisher.fdr)\nplink.bonf <- do.call(\"rbind\", plink.bonf)\nplink.fdr <- do.call(\"rbind\", plink.fdr)\nplink.gc.bonf <- do.call(\"rbind\", plink.gc.bonf)\nplink.gc.fdr <- do.call(\"rbind\", plink.gc.fdr)\n\n\n\n# ## save\n# filename <- paste(\"./\", set.n, \"_treeWAS_performance.Rdata\", sep=\"\")\n# save(treeWAS, file=filename)\n# filename <- paste(\"./\", set.n, \"_fisher.bonf_performance.Rdata\", sep=\"\")\n# save(fisher.bonf, file=filename)\n# filename <- paste(\"./\", set.n, \"_fisher.fdr_performance.Rdata\", sep=\"\")\n# save(fisher.fdr, file=filename)\n# filename <- paste(\"./\", set.n, \"_plink.bonf_performance.Rdata\", sep=\"\")\n# save(plink.bonf, file=filename)\n# filename <- paste(\"./\", set.n, \"_plink.fdr_performance.Rdata\", sep=\"\")\n# save(plink.fdr, file=filename)\n# filename <- paste(\"./\", set.n, \"_plink.gc.bonf_performance.Rdata\", sep=\"\")\n# save(plink.gc.bonf, file=filename)\n# filename <- paste(\"./\", set.n, \"_plink.gc.fdr_performance.Rdata\", sep=\"\")\n# save(plink.gc.fdr, file=filename)\n\n# ## summarise\n# summary(treeWAS)\n# summary(fisher.bonf)\n# summary(fisher.fdr)\n# summary(plink.bonf)\n# summary(plink.fdr)\n# summary(plink.gc.bonf)\n# summary(plink.gc.fdr)\n\n##########\n## plot ##\n##########\n\n## GET DATA\ndat.ori <- dat\n\ntest <- c(rep(\"treeWAS\", length(treeWAS$accuracy)),\n          rep(\"fisher.bonf\", length(fisher.bonf$accuracy)),\n          rep(\"fisher.fdr\", length(fisher.fdr$accuracy)),\n          rep(\"plink.bonf\", length(plink.bonf$accuracy)),\n          rep(\"plink.fdr\", length(plink.bonf$accuracy)),\n          rep(\"plink.gc.bonf\", length(plink.bonf$accuracy)),\n          rep(\"plink.gc.fdr\", length(plink.bonf$accuracy))\n          )\n\n# accuracy <- c(treeWAS$accuracy, fisher.bonf$accuracy, fisher.fdr$accuracy,\n#               plink.bonf$accuracy, plink.fdr$accuracy, plink.gc.bonf$accuracy, plink.gc.fdr$accuracy)\n\n\nsensitivity <- c(treeWAS$sensitivity, fisher.bonf$sensitivity, fisher.fdr$sensitivity,\n                 plink.bonf$sensitivity, plink.fdr$sensitivity, plink.gc.bonf$sensitivity, plink.gc.fdr$sensitivity)\n\n\nspecificity <- c(treeWAS$specificity, fisher.bonf$specificity, fisher.fdr$specificity,\n                 plink.bonf$specificity, plink.fdr$specificity, plink.gc.bonf$specificity, plink.gc.fdr$specificity)\n\nFPR <- c(treeWAS$FPR, fisher.bonf$FPR, fisher.fdr$FPR,\n         plink.bonf$FPR, plink.fdr$FPR, plink.gc.bonf$FPR, plink.gc.fdr$FPR)\n\n\n## WITH NAs...\ndf <- data.frame(test, specificity, FPR, sensitivity)\n#filename <- paste(\"./\", set.n, \"theta_p_50_combined_df.Rdata\", sep=\"\")\n# filename <- paste(\"./\", set.n, \"_combined_df.Rdata\", sep=\"\")\n# save(df, file=filename)\n\nlength(which(df$sensitivity[which(df$test == \"treeWAS\")] == 0))\n\n\n##########################################################################################################\n\n#####################################################\n\n##########################################################################################################\n\n\n## ACCURACY ##\n\n# ## DENSITY + HISTOGRAM\n# library(ggplot2)\n#\n# myCol <- funky(7)\n#\n# ## box plots:\n# # A basic box with the conditions colored\n# bp <- ggplot(df, aes(x=test, y=accuracy, fill=test)) + geom_boxplot()\n# bp + ggtitle(\"Accuracy\")+\n#   theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n#         plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n#\n#\n# # The above adds a redundant legend. With the legend removed:\n# ggplot(dat, aes(x=cond, y=rating, fill=cond)) + geom_boxplot() +\n#   guides(fill=FALSE)\n\n##########################################################################################################\n\n\n#####################################################\n\n##########################################################################################################\n\n\n\n## FPR ##\n\n## DENSITY + HISTOGRAM??\n#\n# library(adegenet)\n# library(ggplot2)\n#\n# myCol <- funky(7)\n\n###########################\n## box plots: ## ## FPR #########################      #########################\n###########################\n\n# A basic box with the conditions colored\nbp <- ggplot(df, aes(x=test, y=FPR, fill=test)) + geom_boxplot()+scale_y_continuous(limits=c(0,1))\nbp + ggtitle(\"FPR\")+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n# The above adds a redundant legend. With the legend removed:\nggplot(df, aes(x=test, y=FPR, fill=test)) + geom_boxplot() + scale_y_continuous(limits=c(0,1)) +\n#   ggtitle(\"FPR\") +\n  guides(fill=FALSE)+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n## set 1 FPR:\n## plink.fdr has one FPR dot at ~ 0.3\n## fisher.fdr, plink.fdr, and plink.gc.fdr all have one FPR dot at ~ 0.02 ... which one?\n\nwhich.max(df$FPR[which(df$test==\"fisher.fdr\")]) # 82\nwhich.max(df$FPR[which(df$test==\"plink.fdr\")]) # 69\nwhich(df$FPR[which(df$test==\"plink.fdr\")] == sort(df$FPR[which(df$test==\"plink.fdr\")], decreasing=TRUE)[2]) # 82\nwhich.max(df$FPR[which(df$test==\"plink.gc.fdr\")]) # 82\n\nargs82 <- get(load(\"./set1_82_args.Rdata\"))\nargs82\n\n\n###################\n## BEESWARM PLOT ##   #########################   #########################   #########################\n###################\n## uses BOTH df and beeswarm dataframes...\n\n# library(beeswarm)\n# library(plyr)\n\n#############\n## MY DATA ##\n#############\nbeeswarm <- beeswarm(FPR ~ test,\n                     data = df,\n                     #method=\"swarm\", # swarm square hex center\n                     #priority=\"descending\", ## ONLY for SWARM method...\n                     method=\"center\", # swarm square hex center\n                     #priority=\"descending\", ## ONLY for SWARM method...\n                     pwcol = test,\n                     #col = myCol, ## to set w funky colours (INSTEAD of pwcol = test)\n                     ylim = c(-0.001,1), # otherwise ggplot can't plot ZERO values --> NAs\n                     las=2,\n                     cex=0.8,\n                     corral = \"omit\") # none gutter wrap omit\nhead(beeswarm)\n\n######################################################\n## Find and Replace OUTLIERS(' symbols in plot...): ##\n######################################################\noutliers <- outlier.vals <- PCH <- list()\nnoms <- as.character(levels(beeswarm$col))\n\n## FOR LOOP ##\nfor(i in 1:length(noms)){\n  #i <- 1\n  # get vals for variable (and boxplot)\n  val <- beeswarm$y[which(beeswarm$col==noms[i])]\n  #boxplot(val, ylim=c(-0.001, 1))\n  PCH[[i]] <- rep(16, length(val)) # standard filled circle...\n\n  ## get median\n  M <- as.numeric(quantile(val, 0.5))\n  # get lower 25 of box\n  Q25 <- as.numeric(quantile(val, 0.25))\n  # get upper 75 of box\n  Q75 <- as.numeric(quantile(val, 0.75))\n  # get box length\n  box <- Q75-Q25\n\n  if(box == 0) box <- 0.0000001\n\n  # with a coef of 1.5 (the default for boxplots), identify outlying values\n  outliers[[i]] <- c(which(val < Q25-(1.5*box)), which(val > Q75+(1.5*box)))\n  # get values of outliers\n  if(length(outliers[[i]]) > 0){\n    outlier.vals[[i]] <- val[outliers[[i]]]\n    PCH[[i]] <- replace(PCH[[i]], outliers[[i]], 17) # replace with triangle...\n  }else{\n    outlier.vals[[i]] <- NULL\n  }\n} # end for loop\n\n#outliers\nPCH <- as.vector(unlist(PCH))\nPCH\n\n\n#########################################################################################################\n######################\n## plots, layers... ##\n######################\nbeeswarm.plot <- ggplot(beeswarm, aes(x, y)) +\n  xlab(\"\") +\n  guides(fill=FALSE) +\n  scale_y_continuous(expression(\"False Positive Rate (FPR)\"), limits=c(0,1))\n\nbeeswarm.plot2 <- beeswarm.plot +\n  guides(fill=FALSE) +\n  geom_boxplot(data=df, aes(x=test, y=FPR, fill=test), alpha=0.25,\n               outlier.shape = 17,\n               outlier.size=0,\n               #outlier.cex=2,\n               ylim=c(-0.001, 1)) +# , varwidth=FALSE, outlier.shape = 17\n  theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=18),\n        axis.text.y = element_text(size=13),\n        axis.title=element_text(size=18),\n        legend.position=\"none\")\n\nbeeswarm.plot3 <- beeswarm.plot2 +\n  geom_point(data=beeswarm, aes(colour = col), pch = PCH, size=5, na.rm=TRUE, alpha=0.6) +\n  #scale_colour_manual(values = myCol) +\n  guides(fill=FALSE) +\n  theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=18),\n        axis.text.y = element_text(size=13),\n        axis.title=element_text(size=18),\n        legend.position=\"none\")\n\nbeeswarm.plot4 <- beeswarm.plot3 +\n  guides(fill=FALSE) +\n  geom_boxplot(data=df, aes(x=test, y=FPR, fill=test), alpha=0.0, fatten=3,\n               outlier.shape = 17,\n               outlier.size=0,\n               #outlier.cex=2,\n               ylim=c(-0.001, 1)) +# , varwidth=FALSE, outlier.shape = 17\n  theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=18),\n        axis.text.y = element_text(size=13),\n        axis.title=element_text(size=18),\n        legend.position=\"none\")\n\nplot(beeswarm.plot4)\n## CAREFUL: CHECK that your outliers are really in (ALMOST) the right place by plotting beeswarm2 w oultier.cex=2, and not outlier.size=0!\n\n\n\n##########################################################################################################\n\n\n\n\n\n\n#####################################\n## box plots: ## ## SENSITIVITY    #########################      #########################\n#####################################\n\n# A basic box with the conditions colored\nbp <- ggplot(df, aes(x=test, y=sensitivity, fill=test)) + geom_boxplot()+scale_y_continuous(limits=c(0,1))\nbp + ggtitle(\"Sensitivity\")+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n# The above adds a redundant legend. With the legend removed:\nggplot(df, aes(x=test, y=sensitivity, fill=test)) + geom_boxplot() + scale_y_continuous(limits=c(0,1)) +\n  #   ggtitle(\"Sensitivity\") +\n  guides(fill=FALSE)+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n# which.min(df$sensitivity[which(df$test == \"treeWAS\")]) # 13\n# length(which(df$sensitivity[which(df$test == \"treeWAS\")] == 0)) # 19\n# which(df$sensitivity[which(df$test == \"treeWAS\")] == 0)\n## 13 18 23 24 28 32 33 38 40 43 44 56 60 76 79 87 91 93 94\n\n\n###################\n## BEESWARM PLOT ##   #########################   #########################   #########################\n###################\n## uses BOTH df and beeswarm dataframes...\n\n# library(beeswarm)\n# library(plyr)\n\n#############\n## MY DATA ##\n#############\nbeeswarm <- beeswarm(sensitivity ~ test,\n                     data = df,\n                     #method=\"swarm\", # swarm square hex center\n                     #priority=\"descending\", ## ONLY for SWARM method...\n                     method=\"center\", # swarm square hex center\n                     #priority=\"descending\", ## ONLY for SWARM method...\n                     pwcol = test,\n                     #col = myCol, ## to set w funky colours (INSTEAD of pwcol = test)\n                     ylim = c(-0.001, 1), # otherwise ggplot can't plot ZERO values --> NAs\n                     las=2,\n                     cex=0.8,\n                     corral = \"omit\") # none gutter wrap omit\nhead(beeswarm)\n\n######################################################\n## Find and Replace OUTLIERS(' symbols in plot...): ##\n######################################################\noutliers <- outlier.vals <- PCH <- list()\nnoms <- as.character(levels(beeswarm$col))\n\n## FOR LOOP ##\nfor(i in 1:length(noms)){\n  #i <- 1\n  # get vals for variable (and boxplot)\n  val <- beeswarm$y[which(beeswarm$col==noms[i])]\n  #boxplot(val, ylim=c(-0.001, 1))\n  PCH[[i]] <- rep(16, length(val)) # standard filled circle...\n\n  ## get median\n  M <- as.numeric(quantile(val, 0.5))\n  # get lower 25 of box\n  Q25 <- as.numeric(quantile(val, 0.25))\n  # get upper 75 of box\n  Q75 <- as.numeric(quantile(val, 0.75))\n  # get box length\n  box <- Q75-Q25\n\n  if(box == 0) box <- 0.0000001\n\n  # with a coef of 1.5 (the default for boxplots), identify outlying values\n  outliers[[i]] <- c(which(val < Q25-(1.5*box)), which(val > Q75+(1.5*box)))\n  # get values of outliers\n  if(length(outliers[[i]]) > 0){\n    outlier.vals[[i]] <- val[outliers[[i]]]\n    PCH[[i]] <- replace(PCH[[i]], outliers[[i]], 17) # replace with triangle...\n  }else{\n    outlier.vals[[i]] <- NULL\n  }\n} # end for loop\n\n#outliers\nPCH <- as.vector(unlist(PCH))\nPCH\n#PCH <- replace(PCH, which(PCH==1), 16)\n\n######################\n## plots, layers... ##\n######################\nbeeswarm.plot <- ggplot(beeswarm, aes(x, y)) +\n  xlab(\"\") +\n  guides(fill=FALSE) +\n  scale_y_continuous(expression(\"Sensitivity\"), limits=c(0,1.001))\n\nbeeswarm.plot2 <- beeswarm.plot +\n  guides(fill=FALSE) +\n  geom_boxplot(data=df, aes(x=test, y=sensitivity, fill=test), alpha=0.25,\n               outlier.shape = 17,\n               outlier.size=0,\n               #outlier.cex=2,\n               ylim=c(-0.001, 1)) +# , varwidth=FALSE, outlier.shape = 17\n  theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=18),\n        axis.text.y = element_text(size=13),\n        axis.title=element_text(size=18),\n        legend.position=\"none\")\n\nbeeswarm.plot3 <- beeswarm.plot2 +\n  geom_point(data=beeswarm, aes(colour = col), pch = PCH, size=5, na.rm=TRUE, alpha=0.6) +\n  #scale_colour_manual(values = myCol) +\n  guides(fill=FALSE) +\n  theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=18),\n        axis.text.y = element_text(size=13),\n        axis.title=element_text(size=18),\n        legend.position=\"none\")\n\nbeeswarm.plot4 <- beeswarm.plot3 +\n  guides(fill=FALSE) +\n  geom_boxplot(data=df, aes(x=test, y=sensitivity, fill=test), alpha=0.0, fatten=3,\n               outlier.shape = 17,\n               outlier.size=0,\n               #outlier.cex=2,\n               ylim=c(-0.001, 1)) +# , varwidth=FALSE, outlier.shape = 17\n  theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=18),\n        axis.text.y = element_text(size=13),\n        axis.title=element_text(size=18),\n        legend.position=\"none\")\n\nplot(beeswarm.plot4)\n\n\n##########################################################################################################\n# beeswarm.plot <- ggplot(beeswarm, aes(x, y)) +\n#   xlab(\"\") +\n#   guides(fill=FALSE) +\n#   scale_y_continuous(expression(\"Sensitivity\"), limits=c(-0.001,1))\n# # +\n# #   scale_x_continuous(labels=as.character(unique(beeswarm$x.orig)),\n# #                      breaks=(c(1:length(unique(beeswarm$x.orig)))))\n#\n#\n# beeswarm.plot2 <- beeswarm.plot +\n#   guides(fill=FALSE) +\n#   geom_boxplot(data=df, aes(x=test, y=sensitivity, fill=test), alpha=0.25,\n#                outlier.shape = 17,\n#                outlier.size=0,\n#                #outlier.cex=2,\n#                ylim=c(-0.001, 1)) +# , varwidth=FALSE, outlier.shape = 17\n#   theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=13),\n#         axis.text.y = element_text(size=11),\n#         axis.title=element_text(size=14),\n#         legend.position=\"none\")\n# #ylim = c(-0.001,1)\n#\n# beeswarm.plot3 <- beeswarm.plot2 +\n#   geom_point(data=beeswarm, aes(colour = col), pch = PCH, cex=5, alpha=0.7, na.rm=TRUE) +\n#   #scale_colour_manual(values = myCol) +\n#   guides(fill=FALSE) +\n#   theme(axis.text.x = element_text(angle=45, hjust=0.9, vjust=0.85, size=18),\n#         axis.text.y = element_text(size=13),\n#         axis.title=element_text(size=18),\n#         legend.position=\"none\")\n#\n# plot(beeswarm.plot3)\n# ## CAREFUL: CHECK that your outliers are really in (ALMOST) the right place by plotting beeswarm2 w oultier.cex=2, and not outlier.size=0!\n#\n\n\n##########################################################################################################\n\n#\n#\n# ######################\n# ## plots, layers... ##\n# ######################\n# beeswarm.plot <- ggplot(beeswarm, aes(x, y)) +\n#   xlab(\"\") +\n#   guides(fill=FALSE) +\n#   scale_y_continuous(expression(\"False Positive Rate (FPR)\"), limits=c(0,1)) +\n#   scale_x_continuous(labels=as.character(unique(beeswarm$x.orig)),\n#                      breaks=(c(1:7)))\n#\n#\n# beeswarm.plot2 <- beeswarm.plot +\n#   guides(fill=FALSE) +\n#   geom_boxplot(aes(x, y, group = round_any(x, 1, round))) # , varwidth=FALSE, outlier.shape = 17\n#\n# beeswarm.plot3 <- beeswarm.plot2 +\n#   geom_point(aes(colour = col, cex = 2), pch = PCH, na.rm=TRUE) +\n#   #scale_colour_manual(values = myCol) +\n#   guides(fill=FALSE) +\n#   theme(axis.text.x = element_text(angle=45, hjust=0, vjust=0, size=12), legend.position=\"none\",\n#         plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n# #   theme(axis.text.x = element_text(angle=90, hjust=0, vjust=1, size=12), legend.position=\"none\",\n# #       plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n#\n# plot(beeswarm.plot3)\n# #######################################################\n# bp <- ggplot(df, aes(x=test, y=FPR)) + # , fill=test\n#   geom_boxplot() + scale_y_continuous(limits=c(0,1)) +\n#   #   ggtitle(\"False Positive Rate (FPR)\") +\n#   guides(fill=FALSE)+\n#   theme(axis.text.x = element_text(angle=45, hjust=0, vjust=0, size=12), legend.position=\"none\",\n#         plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n#\n# plot(bp)\n# points(beeswarm$x, beeswarm$y, type=\"p\", pch=PCH, add=TRUE)\n#\n# #####################################################\n# # The above adds a redundant legend. With the legend removed:\n# p1 <- ggplot(df, aes(x=test, y=FPR, fill=test)) + geom_boxplot() + scale_y_continuous(limits=c(0,1)) +\n#         #   ggtitle(\"False Positive Rate (FPR)\") +\n#         guides(fill=FALSE)+\n#         theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n#         plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n#\n# plot(p1)\n# str(p1)\n\n##########################################################################################################\n## RESET YOUR OPTIONS AS:\n#options(warn=warn.ori, error=error.ori)\n\n# ##############\n# beeswarm.plot3 <- beeswarm.plot2 + geom_point(aes(colour = col)) +\n#   scale_colour_manual(values = c(\"black\", \"red\")) +\n#   scale_x_continuous(breaks = c(1:2),\n#                      labels = c(\"Censored\", \"Metastasis\"), expand = c(0, 0.5))\n# plot(beeswarm.plot3)\n#####################################################\n#####################################################\n## plots, layers...\nbeeswarm.plot <- ggplot(beeswarm, aes(x, y)) +\n  xlab(\"\") +\n  guides(fill=FALSE) +\n  scale_y_continuous(expression(\"False Positive Rate (FPR)\"), limits=c(0,1)) +\n  scale_x_discrete(#breaks= seq(0, 1, length.out=9)[2:8],  limits=c(0,1), #c(1:7),\n    labels = as.character(unique(beeswarm$col)), las=2) #, expand=c(0,0.5))\n\nbeeswarm.plot2 <- beeswarm.plot +\n  guides(fill=FALSE) +\n  geom_boxplot(aes(x, y, group = round_any(x, 1, round)), outlier.shape = NA) #  #??\n\nbeeswarm.plot3 <- beeswarm.plot2 +\n  geom_point(aes(colour = col, cex=2)) +\n  #scale_colour_manual(values = myCol) +\n  guides(fill=FALSE) +\n  theme(axis.text.x = element_text(angle=90, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1),\n        legend.position=\"none\")\n\nplot(beeswarm.plot3)\n\n#####################################################\n\n##########################################################################################################\n\n\n\n## SPECIFICITY ##\n\n## DENSITY + HISTOGRAM\nlibrary(ggplot2)\n\nmyCol <- funky(7)\n\n## box plots:\n# A basic box with the conditions colored\nbp <- ggplot(df, aes(x=test, y=specificity, fill=test)) + geom_boxplot()\nbp + ggtitle(\"Specificity\")+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n  plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n# The above adds a redundant legend. With the legend removed:\nggplot(df, aes(x=test, y=specificity, fill=test)) + geom_boxplot() +\n  ggtitle(\"Specificity\") +\n  guides(fill=FALSE)+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n###########################\n## OR with individual data frames (NAs removed --> diff nrow per test problem... )\nbp <- ggplot(df.specificity, aes(x=test, y=dat.specificity, fill=test)) + geom_boxplot()\nbp + ggtitle(\"Specificity\")+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n##########################################################################################################\n\n#####################################################\n\n##########################################################################################################\n\n\n\n## FPR ##\n\n## DENSITY + HISTOGRAM\nlibrary(ggplot2)\nlibrary(adegenet)\n\nmyCol <- funky(7)\n\n## box plots:\n# A basic box with the conditions colored\nbp <- ggplot(df, aes(x=test, y=FPR, fill=test)) + geom_boxplot()\nbp + ggtitle(\"False Positive Rate (FPR)\")+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n# The above adds a redundant legend. With the legend removed:\nggplot(df, aes(x=test, y=FPR, fill=test)) + geom_boxplot() +  scale_y_continuous(limits=c(0,1)) +\n#   ggtitle(\"False Positive Rate (FPR)\") +\n  guides(fill=FALSE)+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n## all together now:\n\n## can't get all 3 on same plot...\n#ggplot(df, aes(x=FPR, fill=test)) + geom_density(alpha=0.3)\n## works for fishers only:\n#ggplot(df[length(treeWAS$FPR):nrow(df),], aes(x=FPR, fill=test)) + geom_density(alpha=0.3)\n\n\n##########################################################################################################\n\n#####################################################\n\n##########################################################################################################\n@\n\n\n\n\n\n\n\n\n\n\n\n<<echo=FALSE>>=\n\n  ###############\n#### SET 2 ####\n###############\n\n#######################################################################################################################\n\n#################\n## theta_p = 5 ##\n#################\n\nfoo <- dir(\"C:/Cait 2012/Work/Xavier/Sims/set2/theta_p = 25\")\nfoo\n## get all performance Rdata names\ntoKeep <- grep(\"performance\", foo) ##??\nfoo <- foo[toKeep]\n\n## load performance data\ndat <- list()\nsetwd(\"C:/Cait 2012/Work/Xavier/Sims/set2/theta_p = 25\")\nfor(i in 1:length(foo)){\n  dat[[i]] <- get(load(paste(\"./\", foo[i], sep=\"\")))\n}\n\ntreeWAS <- list()\nfor(i in 1:length(dat)){\n  treeWAS[[i]] <- dat[[i]][[1]]\n}\n\nfisher.bonf <- list()\nfor(i in 1:length(dat)){\n  fisher.bonf[[i]] <- dat[[i]][[2]]\n}\n\nfisher.fdr <- list()\nfor(i in 1:length(dat)){\n  fisher.fdr[[i]] <- dat[[i]][[3]]\n}\n\n## combine\ntreeWAS <- do.call(\"rbind\", treeWAS)\nfisher.bonf <- do.call(\"rbind\", fisher.bonf)\nfisher.fdr <- do.call(\"rbind\", fisher.fdr)\n\n## save\nsave(treeWAS, file=\"./set2_theta_p_25_treeWAS_performance.Rdata\")\nsave(fisher.bonf, file=\"./set2_theta_p_25_fisher.bonf_performance.Rdata\")\nsave(fisher.fdr, file=\"./set2_theta_p_25_fisher.fdr_performance.Rdata\")\n\n## summarise\nsummary(treeWAS)\nsummary(fisher.bonf)\nsummary(fisher.fdr)\n\n##########\n## plot ##\n##########\n\n## GET DATA\ndat.ori <- dat\ntest <- c(rep(\"treeWAS\", length(treeWAS$accuracy)),\n          rep(\"fisher.bonf\", length(fisher.bonf$accuracy)),\n          rep(\"fisher.fdr\", length(fisher.fdr$accuracy)))\naccuracy <- c(treeWAS$accuracy, fisher.bonf$accuracy, fisher.fdr$accuracy)\nspecificity <- c(treeWAS$specificity, fisher.bonf$specificity, fisher.fdr$specificity)\nFPR <- c(treeWAS$FPR, fisher.bonf$FPR, fisher.fdr$FPR)\n\ndf <- data.frame(test, accuracy, specificity, FPR)\nsave(df, file=\"./set2_theta_p_25_combined_df.Rdata\")\n\n\n\n##########################################################################################################\n\n#####################################################\n\n##########################################################################################################\n\n\n## ACCURACY ##\n\n## DENSITY + HISTOGRAM\nlibrary(ggplot2)\n\nmyCol <- funky(5)\n\n# Histogram overlaid with kernel density curve\np <- ggplot(df[which(test==\"treeWAS\"),], aes(x=accuracy)) +\n  geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n                 binwidth=.00015,\n                 colour=\"black\", fill=\"white\", xlim=c(0.9995, 1.001)) +\n  geom_density(alpha=.5, fill=myCol[1], xlim=c(0.9995, 1.001))  # Overlay with transparent density plot\n\np + ggtitle(expression(atop(\"Accuracy: treeWAS\", atop(italic(\"(theta_p = 25)\"), \"\")))) +\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n\n\n# Histogram overlaid with kernel density curve\np2 <- ggplot(df[which(test==\"fisher.bonf\"),], aes(x=accuracy)) +\n  geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n                 binwidth=.05,\n                 colour=\"black\", fill=\"white\") +\n  geom_density(alpha=.5, fill=myCol[3])  # Overlay with transparent density plot\n\np2 + ggtitle(expression(atop(\"Accuracy: Fisher's Exact Test with Bonferonni Correction\"), atop(italic(\"(theta_p = 5)\"), \"\"))) +\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n\n\np3 <- ggplot(df[which(test==\"fisher.fdr\"),], aes(x=accuracy)) +\n  geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n                 binwidth=.05,\n                 colour=\"black\", fill=\"white\") +\n  geom_density(alpha=.5, fill=myCol[2])  # Overlay with transparent density plot\n\np3 + ggtitle(expression(atop(\"Accuracy: Fisher's Exact Test with FDR Correction\"), atop(italic(\"(theta_p = 5)\"), \"\"))) +\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n\n\n## box plots:\n# A basic box with the conditions colored\nbp <- ggplot(df, aes(x=test, y=accuracy, fill=test)) + geom_boxplot()\nbp + ggtitle(\"Accuracy\")+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n# The above adds a redundant legend. With the legend removed:\nggplot(dat, aes(x=cond, y=rating, fill=cond)) + geom_boxplot() +\n  guides(fill=FALSE)\n\n\n## all together now:\n\n## can't get all 3 on same plot...\n#ggplot(df, aes(x=accuracy, fill=test)) + geom_density(alpha=0.3)\n## works for fishers only:\n#ggplot(df[length(treeWAS$accuracy):nrow(df),], aes(x=accuracy, fill=test)) + geom_density(alpha=0.3)\n\n\n##########################################################################################################\n\n#####################################################\n\n##########################################################################################################\n\n\n\n# ## SPECIFICITY ##\n#\n# ## DENSITY + HISTOGRAM\n# library(ggplot2)\n#\n# myCol <- funky(5)\n#\n# # Histogram overlaid with kernel density curve\n# p <- ggplot(df[which(test==\"treeWAS\"),], aes(x=accuracy)) +\n#     geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n#                    binwidth=.00015,\n#                    colour=\"black\", fill=\"white\", xlim=c(0.9995, 1.001)) +\n#     geom_density(alpha=.5, fill=myCol[1], xlim=c(0.9995, 1.001))  # Overlay with transparent density plot\n#\n# p + ggtitle(expression(atop(\"Accuracy: treeWAS\", atop(italic(\"(theta_p = 5)\"), \"\")))) +\n#    theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n#    #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n#    plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n#\n#\n# # Histogram overlaid with kernel density curve\n# p2 <- ggplot(df[which(test==\"fisher.bonf\"),], aes(x=accuracy)) +\n#     geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n#                    binwidth=.05,\n#                    colour=\"black\", fill=\"white\") +\n#     geom_density(alpha=.5, fill=myCol[3])  # Overlay with transparent density plot\n#\n# p2 + ggtitle(expression(atop(\"Accuracy: Fisher's Exact Test with Bonferonni Correction\"), atop(italic(\"(theta_p = 5)\"), \"\"))) +\n#    theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n#    #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n#    plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n#\n#\n# p3 <- ggplot(df[which(test==\"fisher.fdr\"),], aes(x=accuracy)) +\n#     geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n#                    binwidth=.05,\n#                    colour=\"black\", fill=\"white\") +\n#     geom_density(alpha=.5, fill=myCol[2])  # Overlay with transparent density plot\n#\n# p3 + ggtitle(expression(atop(\"Accuracy: Fisher's Exact Test with FDR Correction\"), atop(italic(\"(theta_p = 5)\"), \"\"))) +\n#    theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n#    #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n#    plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n#\n#\n# ## box plots:\n# # A basic box with the conditions colored\n# bp <- ggplot(df, aes(x=test, y=accuracy, fill=test)) + geom_boxplot()\n# bp + ggtitle(\"Accuracy\")+\n#   theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n#   plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n#\n#\n# # The above adds a redundant legend. With the legend removed:\n# ggplot(dat, aes(x=cond, y=rating, fill=cond)) + geom_boxplot() +\n#     guides(fill=FALSE)\n#\n#\n# ## all together now:\n#\n# ## can't get all 3 on same plot...\n# #ggplot(df, aes(x=accuracy, fill=test)) + geom_density(alpha=0.3)\n# ## works for fishers only:\n# #ggplot(df[length(treeWAS$accuracy):nrow(df),], aes(x=accuracy, fill=test)) + geom_density(alpha=0.3)\n\n\n##########################################################################################################\n\n#####################################################\n\n##########################################################################################################\n\n\n\n## FPR ##\n\n## DENSITY + HISTOGRAM\nlibrary(ggplot2)\n\nmyCol <- funky(5)\n\n# Histogram overlaid with kernel density curve\np <- ggplot(df[which(test==\"treeWAS\"),], aes(x=FPR)) +\n  geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n                 binwidth=.00015,\n                 colour=\"black\", fill=\"white\", xlim=c(0.9995, 1.001)) +\n  geom_density(alpha=.5, fill=myCol[1], xlim=c(0.9995, 1.001))  # Overlay with transparent density plot\n\np + ggtitle(expression(atop(\"FPR: treeWAS\", atop(italic(\"(theta_p = 25)\"), \"\")))) +\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n\n\n# Histogram overlaid with kernel density curve\np2 <- ggplot(df[which(test==\"fisher.bonf\"),], aes(x=FPR)) +\n  geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n                 binwidth=.05,\n                 colour=\"black\", fill=\"white\") +\n  geom_density(alpha=.5, fill=myCol[3])  # Overlay with transparent density plot\n\np2 + ggtitle(expression(atop(\"FPR: Fisher's Exact Test with Bonferonni Correction\"), atop(italic(\"(theta_p = 5)\"), \"\"))) +\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n\n\np3 <- ggplot(df[which(test==\"fisher.fdr\"),], aes(x=FPR)) +\n  geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis\n                 binwidth=.05,\n                 colour=\"black\", fill=\"white\") +\n  geom_density(alpha=.5, fill=myCol[2])  # Overlay with transparent density plot\n\np3 + ggtitle(expression(atop(\"FPR: Fisher's Exact Test with FDR Correction\"), atop(italic(\"(theta_p = 5)\"), \"\"))) +\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        #plot.margin = unit(c(1.5, 1, 1, 1), \"cm\"),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust = -1))\n\n\n## box plots:\n# A basic box with the conditions colored\nbp <- ggplot(df, aes(x=test, y=FPR, fill=test)) + geom_boxplot()\nbp + ggtitle(\"False Positive Rate (FPR)\")+\n  theme(axis.text.x = element_text(angle=0, hjust=0, vjust=1),\n        plot.title = element_text(size = 20, face = \"bold\", colour = \"black\", vjust =1))\n\n\n# The above adds a redundant legend. With the legend removed:\nggplot(dat, aes(x=cond, y=rating, fill=cond)) + geom_boxplot() +\n  guides(fill=FALSE)\n\n\n## all together now:\n\n## can't get all 3 on same plot...\n#ggplot(df, aes(x=FPR, fill=test)) + geom_density(alpha=0.3)\n## works for fishers only:\n#ggplot(df[length(treeWAS$FPR):nrow(df),], aes(x=FPR, fill=test)) + geom_density(alpha=0.3)\n\n\n##########################################################################################################\n\n#####################################################\n\n##########################################################################################################\n\n## histogram\nhist(treeWAS$accuracy, xlab=\"Accuracy\", main=\"ACCURACY\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(treeWAS$accuracy, xlim=c(0,1), xlab=\"Accuracy\", main=\"ACCURACY\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(fisher.bonf$accuracy, xlim=c(0,1), xlab=\"Accuracy\",\n     main=\"ACCURACY\\n(Fisher's Exact Test w/ Bonferonni Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(fisher.fdr$accuracy, xlim=c(0,1), xlab=\"Accuracy\",\n     main=\"ACCURACY\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n\n## density dist\nplot(density(treeWAS$accuracy), xlab=\"Accuracy\", main=\"ACCURACY\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nplot(density(fisher.bonf$accuracy), xlab=\"Accuracy\",\n     main=\"ACCURACY\\n(Fisher's Exact Test w/ Bonferonni Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nplot(density(fisher.fdr$accuracy), xlab=\"Accuracy\",\n     main=\"ACCURACY\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n\n\n# ## DENSITY + HISTOGRAM\n# myCol <- funky(5)\n#\n# hist(treeWAS$accuracy, xlab=\"Accuracy\",\n#      col=transp(myCol[1], 0.05),\n#      main=\"ACCURACY\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n# polygon(density(treeWAS$accuracy), col=transp(myCol[1], .3), border=myCol[1])\n#\n# hist(fisher.bonf$accuracy, xlim=c(0,1), xlab=\"Accuracy\",\n#      col=transp(myCol[2], 0.05),\n#      main=\"ACCURACY\\n(Fisher's Exact Test w/ Bonferonni Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n# polygon(density(fisher.bonf$accuracy), col=transp(myCol[2], .3), border=myCol[2])\n#\n# hist(fisher.fdr$accuracy, xlim=c(0,1), xlab=\"Accuracy\",\n#      main=\"ACCURACY\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=myCol[3], font.sub=2)\n#\n# plot(density(fisher.fdr$accuracy), xlab=\"Accuracy\",\n#      main=\"ACCURACY\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n\n\n## SPECIFICITY ##\n\n## histogram\nhist(treeWAS$specificity, xlab=\"specificity\", main=\"SPECIFICITY\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(treeWAS$specificity, xlim=c(0,1), xlab=\"specificity\", main=\"SPECIFICITY\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(fisher.bonf$specificity, xlim=c(0,1), xlab=\"specificity\",\n     main=\"SPECIFICITY\\n(Fisher's Exact Test w/ Bonferonni Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(fisher.fdr$specificity, xlim=c(0,1), xlab=\"specificity\",\n     main=\"SPECIFICITY\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n\n## density dist\nplot(density(treeWAS$specificity), xlab=\"specificity\", main=\"SPECIFICITY\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nplot(density(fisher.bonf$specificity), xlab=\"specificity\",\n     main=\"SPECIFICITY\\n(Fisher's Exact Test w/ Bonferonni Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nplot(density(fisher.fdr$specificity), xlab=\"specificity\",\n     main=\"SPECIFICITY\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n\n\n## FPR ##\n\n## histogram\nhist(treeWAS$FPR, xlab=\"FPR\", main=\"FALSE POSITIVE RATE\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(treeWAS$FPR, xlim=c(0,1), xlab=\"FPR\", main=\"FALSE POSITIVE RATE\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(fisher.bonf$FPR, xlim=c(0,1), xlab=\"FPR\",\n     main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ Bonferonni Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nhist(fisher.fdr$FPR, xlim=c(0,1), xlab=\"FPR\",\n     main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n\n## density dist\nplot(density(treeWAS$FPR), xlab=\"FPR\", main=\"FALSE POSITIVE RATE\\n(treeWAS)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nplot(density(fisher.bonf$FPR), xlab=\"FPR\",\n     main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ Bonferonni Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\nplot(density(fisher.fdr$FPR), xlab=\"FPR\",\n     main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ FDR Correction)\", sub=\"theta_p = 5\", col.sub=\"red\", font.sub=2)\n\n\n\n\n\n\n\n#######################################################################################################################\n\n#################\n## theta_p = 25 ##\n#################\n\nfoo <- dir(\"C:/Cait 2012/Work/Xavier/Sims/set2/theta_p = 25\")\nfoo\n## get all performance Rdata names\ntoKeep <- grep(\"performance\", foo) ##??\nfoo <- foo[toKeep]\n\n## load performance data\ndat <- list()\nsetwd(\"C:/Cait 2012/Work/Xavier/Sims/set2/theta_p = 25\")\nfor(i in 1:length(foo)){\n  dat[[i]] <- get(load(paste(\"./\", foo[i], sep=\"\")))\n}\n\ntreeWAS <- list()\nfor(i in 1:length(dat)){\n  treeWAS[[i]] <- dat[[i]][[1]]\n}\n\nfisher.bonf <- list()\nfor(i in 1:length(dat)){\n  fisher.bonf[[i]] <- dat[[i]][[2]]\n}\n\nfisher.fdr <- list()\nfor(i in 1:length(dat)){\n  fisher.fdr[[i]] <- dat[[i]][[3]]\n}\n\n## combine\ntreeWAS <- do.call(\"rbind\", treeWAS)\nfisher.bonf <- do.call(\"rbind\", fisher.bonf)\nfisher.fdr <- do.call(\"rbind\", fisher.fdr)\n\n## save\nsave(treeWAS, file=\"./set2_theta_p_25_treeWAS_performance.Rdata\")\nsave(fisher.bonf, file=\"./set2_theta_p_25_fisher.bonf_performance.Rdata\")\nsave(fisher.fdr, file=\"./set2_theta_p_25_fisher.fdr_performance.Rdata\")\n\n## summarise\nsummary(treeWAS)\nsummary(fisher.bonf)\nsummary(fisher.fdr)\n\n##########\n## plot ##\n##########\n\n## ACCURACY ##\n\n## histogram\nhist(treeWAS$accuracy)\nhist(treeWAS$accuracy, xlim=c(0,1))\nhist(fisher.bonf$accuracy, xlim=c(0,1))\nhist(fisher.fdr$accuracy, xlim=c(0,1))\n\n## density dist\nplot(density(treeWAS$accuracy), main=\"ACCURACY\\n(treeWAS)\")\nplot(density(fisher.bonf$accuracy), main=\"ACCURACY\\n(Fisher's Exact Test w/ Bonferonni Correction)\")\nplot(density(fisher.fdr$accuracy), main=\"ACCURACY\\n(Fisher's Exact Test w/ FDR Correction)\")\n\n\n## SPECIFICITY ##\n\n## histogram\nhist(treeWAS$specificity)\nhist(treeWAS$specificity, xlim=c(0,1))\nhist(fisher.bonf$specificity, xlim=c(0,1))\nhist(fisher.fdr$specificity, xlim=c(0,1))\n\n## density dist\nplot(density(treeWAS$specificity), main=\"SPECIFICITY\\n(treeWAS)\")\nplot(density(fisher.bonf$specificity), main=\"SPECIFICITY\\n(Fisher's Exact Test w/ Bonferonni Correction)\")\nplot(density(fisher.fdr$specificity), main=\"SPECIFICITY\\n(Fisher's Exact Test w/ FDR Correction)\")\n\n\n## FPR ##\n\n## histogram\nhist(treeWAS$FPR)\nhist(treeWAS$FPR, xlim=c(0,1))\nhist(fisher.bonf$FPR, xlim=c(0,1))\nhist(fisher.fdr$FPR, xlim=c(0,1))\n\n## density dist\nplot(density(treeWAS$FPR), main=\"FALSE POSITIVE RATE\\n(treeWAS)\")\nplot(density(fisher.bonf$FPR), main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ Bonferonni Correction)\")\nplot(density(fisher.fdr$FPR), main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ FDR Correction)\")\n\n\n\n\n\n\n\n#######################################################################################################################\n\n#################\n## theta_p = 5 ##\n#################\n\nfoo <- dir(\"C:/Cait 2012/Work/Xavier/Sims/set2/theta_p = 5\")\nfoo\n## get all performance Rdata names\ntoKeep <- grep(\"performance\", foo) ##??\nfoo <- foo[toKeep]\n\n## load performance data\ndat <- list()\nsetwd(\"C:/Cait 2012/Work/Xavier/Sims/set2/theta_p = 5\")\nfor(i in 1:length(foo)){\n  dat[[i]] <- get(load(paste(\"./\", foo[i], sep=\"\")))\n}\n\ntreeWAS <- list()\nfor(i in 1:length(dat)){\n  treeWAS[[i]] <- dat[[i]][[1]]\n}\n\nfisher.bonf <- list()\nfor(i in 1:length(dat)){\n  fisher.bonf[[i]] <- dat[[i]][[2]]\n}\n\nfisher.fdr <- list()\nfor(i in 1:length(dat)){\n  fisher.fdr[[i]] <- dat[[i]][[3]]\n}\n\n## combine\ntreeWAS <- do.call(\"rbind\", treeWAS)\nfisher.bonf <- do.call(\"rbind\", fisher.bonf)\nfisher.fdr <- do.call(\"rbind\", fisher.fdr)\n\n## save\nsave(treeWAS, file=\"./set2_theta_p_5_treeWAS_performance.Rdata\")\nsave(fisher.bonf, file=\"./set2_theta_p_5_fisher.bonf_performance.Rdata\")\nsave(fisher.fdr, file=\"./set2_theta_p_5_fisher.fdr_performance.Rdata\")\n\n## summarise\nsummary(treeWAS)\nsummary(fisher.bonf)\nsummary(fisher.fdr)\n\n##########\n## plot ##\n##########\n\n## ACCURACY ##\n\n## histogram\nhist(treeWAS$accuracy)\nhist(treeWAS$accuracy, xlim=c(0,1))\nhist(fisher.bonf$accuracy, xlim=c(0,1))\nhist(fisher.fdr$accuracy, xlim=c(0,1))\n\n## density dist\nplot(density(treeWAS$accuracy), main=\"ACCURACY\\n(treeWAS)\")\nplot(density(fisher.bonf$accuracy), main=\"ACCURACY\\n(Fisher's Exact Test w/ Bonferonni Correction)\")\nplot(density(fisher.fdr$accuracy), main=\"ACCURACY\\n(Fisher's Exact Test w/ FDR Correction)\")\n\n\n## SPECIFICITY ##\n\n## histogram\nhist(treeWAS$specificity)\nhist(treeWAS$specificity, xlim=c(0,1))\nhist(fisher.bonf$specificity, xlim=c(0,1))\nhist(fisher.fdr$specificity, xlim=c(0,1))\n\n## density dist\nplot(density(treeWAS$specificity), main=\"SPECIFICITY\\n(treeWAS)\")\nplot(density(fisher.bonf$specificity), main=\"SPECIFICITY\\n(Fisher's Exact Test w/ Bonferonni Correction)\")\nplot(density(fisher.fdr$specificity), main=\"SPECIFICITY\\n(Fisher's Exact Test w/ FDR Correction)\")\n\n\n## FPR ##\n\n## histogram\nhist(treeWAS$FPR)\nhist(treeWAS$FPR, xlim=c(0,1))\nhist(fisher.bonf$FPR, xlim=c(0,1))\nhist(fisher.fdr$FPR, xlim=c(0,1))\n\n## density dist\nplot(density(treeWAS$FPR), main=\"FALSE POSITIVE RATE\\n(treeWAS)\")\nplot(density(fisher.bonf$FPR), main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ Bonferonni Correction)\")\nplot(density(fisher.fdr$FPR), main=\"FALSE POSITIVE RATE\\n(Fisher's Exact Test w/ FDR Correction)\")\n",
    "created" : 1473783912660.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "577922698",
    "id" : "3A90D5B8",
    "lastKnownWriteTime" : 1473806418,
    "last_content_update" : 1473806418421,
    "path" : "/media/caitiecollins/88CC9BCECC9BB4C2/Cait 2016/Work/Xavier/Sims/Old Sims 2015/boxplots.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}